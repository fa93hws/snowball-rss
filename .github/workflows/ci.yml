name: CI

on:
  pull_request:
  push:
    branches:
      - master
  release:
    types:
      - published
      - edited

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run npm
        run: npm ci
      - name: Run Eslint
        run: npm run lint
      - name: Check code style
        run: npm run format
      - name: Run typecheck
        run: npm run lint:ts
      - name: Run jest test excluding puppeteer
        run: npm run test:no-puppeteer -- --coverage
      - name: Report test coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/**/*
          flags: unittests
      - name: Run puppeteer test
        run: npm run test:puppeteer
      - name: Run esbuild
        run: npm run build

  docker:
    name: Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Run npm
        run: npm ci
      - name: Run esbuild
        run: npm run build
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Check release tag version
        if: ${{ github.event_name == 'release' }}
        run: bin/check_github_release_tag.sh ${{ github.ref_name }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
